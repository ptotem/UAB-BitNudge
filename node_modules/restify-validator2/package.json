{
  "name": "restify-validator2",
  "description": "Restify middleware built on top of the validator package.",
  "keywords": [
    "restify",
    "validator",
    "validation",
    "validate"
  ],
  "author": {
    "name": "Joey Bratton",
    "email": "joey@joeyb.org"
  },
  "version": "0.0.3",
  "homepage": "https://github.com/joeyb/restify-validator2",
  "repository": {
    "type": "git",
    "url": "git://github.com/joeyb/restify-validator2.git"
  },
  "main": "./lib/index.js",
  "scripts": {
    "build": "coffee --bare --compile --output lib/ src/*.coffee",
    "prepublish": "coffee --bare --compile --output lib/ src/*.coffee",
    "postpublish": "rm -rf lib"
  },
  "dependencies": {
    "validator": ">=1.5.1"
  },
  "peerDependencies": {
    "restify": ">=2.6.0"
  },
  "devDependencies": {
    "coffee-script": ">=1.6.3"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "readme": "restify-validator2\n==================\n\nrestify-validator2 is middleware for [restify] that integrates with the [node-validator] module.\n\nrestify-validator2 borrows some ideas from [restify-validator], but differs in how it specifies where to find the data\nto be verified. The original restify-validator's `req.check` method always looks for values in `req.params`,\nrestify-validator2 allows you to specify an object to pull that value from (i.e. `req.body`, `req.params`, etc.).\n\nInstallation\n============\n\n```\nnpm install restify-validator2\n```\n\nUsage\n=====\n\n```JavaScript\nvar restify = require('restify');\nvar restifyValidator = require('restify-validator2');\nvar app = restify.createServer();\n\napp.use(restify.bodyParser({ mapParams: false }));\napp.use(restify.queryParser({ mapParams: false }));\napp.use(restifyValidator.validatorPlugin);\n\napp.post('/:urlparam', function(req, res) {\n  // Make sure `urlparam` exists in parameters parsed from the route\n  req.check(req.params, 'urlparam').notEmpty();\n\n  // Make sure `queryparam` exists in parameters parsed from the query string\n  req.check(req.query, 'queryparam').notEmpty();\n\n  // Make sure `bodyparam` exists in parameters parsed from the request body\n  req.check(req.body, 'bodyparam').notEmpty();\n\n  var validatorErrorResponse = req.getValidatorErrorResponse();\n  if (validatorErrorResponse) {\n    res.send(validatorErrorResponse)\n    return next()\n  }\n\n  res.json({\n    urlparam: req.params['urlparam'],\n    queryparam: req.query['queryparam'],\n    bodyparam: req.body['bodyparam']\n  });\n});\n\napp.listen(8888);\n```\n\n[restify]: https://github.com/mcavage/node-restify\n[node-validator]: https://github.com/chriso/node-validator\n[restify-validator]: https://github.com/cjroebuck/restify-validator\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/joeyb/restify-validator2/issues"
  },
  "_id": "restify-validator2@0.0.3",
  "dist": {
    "shasum": "b3cb44e7d69de0806463e15ed43ecbeb4a8a8f21",
    "tarball": "http://registry.npmjs.org/restify-validator2/-/restify-validator2-0.0.3.tgz"
  },
  "_from": "restify-validator2@0.0.3",
  "_npmVersion": "1.3.5",
  "_npmUser": {
    "name": "joeyb",
    "email": "joey@joeyb.org"
  },
  "maintainers": [
    {
      "name": "joeyb",
      "email": "joey@joeyb.org"
    }
  ],
  "directories": {},
  "_shasum": "b3cb44e7d69de0806463e15ed43ecbeb4a8a8f21",
  "_resolved": "https://registry.npmjs.org/restify-validator2/-/restify-validator2-0.0.3.tgz"
}
